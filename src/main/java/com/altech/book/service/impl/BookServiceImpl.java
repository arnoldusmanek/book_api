package com.altech.book.service.impl;import com.altech.book.model.Book;import com.altech.book.repository.IBookRepository;import com.altech.book.service.BookService;import jakarta.persistence.EntityNotFoundException;import jakarta.transaction.Transactional;import org.springframework.stereotype.Service;import java.util.List;@Service@Transactionalpublic class BookServiceImpl implements BookService {    private final IBookRepository repository;    public BookServiceImpl(IBookRepository repository) {        this.repository = repository;    }    @Override    public List<Book> getAllBooks() {        return repository.findAll();    }    @Override    public Book getBookById(Long id) {        return repository.findById(id).orElseThrow(()-> new EntityNotFoundException("Book not found with this id: " + id));    }    @Override    public Book createBook(Book book) {        // kita set id = null agar tidak dianggap update        book.setId(null);        return repository.save(book);    }    @Override    public Book updateBook(Long id, Book book) {        // cari buku dengan id bersangkutan terlebih dahulu        Book existingBook = repository.findById(id).orElseThrow(()-> new EntityNotFoundException("Book not found with this id: " + id));        existingBook.setTitle(book.getTitle());        existingBook.setAuthor(book.getAuthor());        existingBook.setYear(book.getYear());        return repository.save(existingBook);    }    @Override    public void deleteBook(Long id) {        // pastikan buku yang ingin dihapus tersedia        if (!repository.existsById(id)){            throw new EntityNotFoundException("Book not found with id: " + id);        }        repository.deleteById(id);    }}